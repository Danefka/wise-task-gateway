import org.flywaydb.gradle.task.FlywayMigrateTask

plugins {
    id 'java'
    id "com.google.protobuf" version "0.9.2"
    id "org.flywaydb.flyway" version "9.21.1"
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${dependencyManagementPluginVersion}"
    id "io.github.kobylynskyi.graphql.codegen" version "5.7.2"
}

group = 'ru.leti'
version = '1.0.0'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

sourceSets {
    main {
        proto {
            srcDir 'src/main/resources/proto'
        }
        java {
            srcDir "$buildDir/generated/source/graphql"
        }
    }
}

dependencies {
    implementation 'io.github.lognet:grpc-spring-boot-starter:5.0.0'
    implementation 'io.grpc:grpc-protobuf:1.53.0'
    implementation 'io.grpc:grpc-stub:1.53.0'
    implementation 'com.google.protobuf:protobuf-java-util:3.21.7'

    implementation 'org.mapstruct:mapstruct:1.5.3.Final'

    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt
    implementation 'io.jsonwebtoken:jjwt:0.2'
    implementation 'javax.xml.bind:jaxb-api:2.1'
    implementation 'org.postgresql:postgresql:42.2.27'

    implementation 'org.springframework.boot:spring-boot-starter-graphql'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    annotationProcessor 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
    annotationProcessor 'no.entur.mapstruct.spi:protobuf-spi-impl:1.42'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'javax.validation:validation-api:2.0.1.Final'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework:spring-webflux'
    testImplementation 'org.springframework.graphql:spring-graphql-test'
}

task pluginMigrate(type: FlywayMigrateTask) {
    url = 'jdbc:postgresql://localhost:5432/wise_task_plugin'
    user = 'wise_task_plugin'
    password = 'wise_task_plugin'
    cleanDisabled = false
    locations = ['filesystem:./src/main/resources/db/plugin/migration']
}

task profileMigrate(type: FlywayMigrateTask) {
    url = 'jdbc:postgresql://localhost:5432/wise_task_profile'
    user = 'wise_task_profile'
    password = 'wise_task_profile'
    cleanDisabled = false
    locations = ['filesystem:./src/main/resources/db/profile/migration']
}

task taskMigrate(type: FlywayMigrateTask) {
    url = 'jdbc:postgresql://localhost:5432/wise_task_task'
    user = 'wise_task_task'
    password = 'wise_task_task'
    cleanDisabled = false
    locations = ['filesystem:./src/main/resources/db/task/migration']
}

graphqlCodegen {
    // all config options:
    // https://github.com/kobylynskyi/graphql-java-codegen/blob/main/docs/codegen-options.md
    graphqlSchemas {
        rootDir = "$projectDir/src/main/resources/graphql/".toString()
    }
    outputDir = new File("$buildDir/generated/source/graphql")
    packageName = "ru.leti.graphql.model"
}

// Automatically generate GraphQL code on project build:
compileJava.dependsOn 'graphqlCodegen'

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.21.7"
    }
    clean {
        delete protobuf.generatedFilesBaseDir
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:1.53.0"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
